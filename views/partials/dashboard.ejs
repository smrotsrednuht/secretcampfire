<% include ../partials/utils.ejs %>

var Dashboard = new function() {
  this.init = function(cfg) {
    this.postSelector = cfg.postSelector;
    this.followSelector = cfg.followSelector;
    this.unfollowSelector = cfg.unfollowSelector;
    this.queuePageButtonSelector = cfg.queuePageButtonSelector;

    this.bindEvents();
    this.handleUrlParamActions();
    this.loadSettings();
  }

  this.bindEvents = function() {
    var dash = this;

    $(dash.postSelector+"-form").on('reset', function() {
      // clear hidden inputs as well (e.g. reblog url)
      $("input[type='hidden']", $(this)).val('');
    });
    $(dash.postSelector+"-modal").on('shown.bs.modal', function() {
      $(this).find('input:text')[0].focus();
    });
    $(dash.postSelector+"-modal").on('hidden.bs.modal', function() {
      $(this).find('form').get(0).reset(); // clear form
      // reset to 'new post' mode
      $(dash.postSelector+"-modal .modal-title .action").html("New post");
      $(dash.postSelector+"-save-button .oi")
        .removeClass('oi-clock').addClass('oi-pencil');
      $(dash.postSelector+"-save-button .label").text("Post");
    });
    $(dash.followSelector+"-modal").on('shown.bs.modal', function() {
      $(this).find('input:text')[0].focus();
    });
    $(dash.followSelector+"-modal").on('hidden.bs.modal', function() {
      $(this).find('form').get(0).reset(); // clear form
    });
    $(dash.unfollowSelector+"-modal").on('shown.bs.modal', function() {
      $(this).find('input:text')[0].focus();
    });
    $(dash.unfollowSelector+"-modal").on('hidden.bs.modal', function() {
      $(this).find('form').get(0).reset(); // clear form
    });

    var $pform = $(dash.postSelector+"-form");
    $(dash.postSelector+"-save-button").click(function(e) {
      e.preventDefault();

      var title = $pform.find('.form-post-title').val();
      var thumb = $pform.find('.form-post-thumb').val();
      var image = $pform.find('.form-post-image').val();
      var url = $pform.find('.form-post-url').val();
      var reblogUrl = $pform.find('.form-post-reblog-url').val();
      var text = $pform.find('.form-post-text').val();
      var tags = $pform.find('.form-post-tags').val();
      var enqueue = $pform.find('.form-post-enqueue').val();
      var updateId = $pform.find('.form-post-update-id').val();

      // post data to backend to save in DB
      $.post('/post', { 
          title: title,
          thumbs: thumb,
          images: image,
          urls: url,
          re_url: reblogUrl,
          text: text,
          tags: tags,
          queued: enqueue,
          update_id: updateId
        },
        function(data, status, xhr) {
          // success
          console.log(data);
        },
        'json')
      .done(function() {
        $(dash.postSelector+"-success-alert").fadeIn().delay(500)
          .fadeOut(function() {
            $(dash.postSelector+"-modal").modal('hide');
          });

        // remove params from url
        window.history.replaceState(null, null, window.location.pathname);
      })
      .fail(function(jqxhr, settines, ex) {
      });

      return false;
    });
    $(dash.postSelector+"-mode-dropdown .dropdown-item").click(function(e) {
      var mode = $(this).data('mode');
      if (mode == "queue")
      {
        $pform.find('.form-post-enqueue').val("1");
        $(dash.postSelector+"-save-button .oi")
          .removeClass('oi-pencil').addClass('oi-clock');
        $(dash.postSelector+"-save-button .label").text("Queue");
      }
      else
      {
        $pform.find('.form-post-enqueue').val("");
        $(dash.postSelector+"-save-button .oi")
          .removeClass('oi-clock').addClass('oi-pencil');
        $(dash.postSelector+"-save-button .label").text("Post");
      }
    });

    var $fform = $(dash.followSelector+"-form");
    $(dash.followSelector+"-save-button").click(function(e) {
      e.preventDefault();

      var url = $fform.find(".form-follow-url").val();
      console.log(url);

      // post URL to backend to save in DB
      $.post('/follow', { 
          url: url
        },
        function(data, status, xhr) {
          // success
          console.log(data);
        },
        'json')
      .done(function() {
        $(dash.followSelector+"-success-alert").fadeIn().delay(500)
          .fadeOut(function() {
            $(dash.followSelector+"-modal").modal('hide');
          });

        // remove params from url
        window.history.replaceState(null, null, window.location.pathname);
      })
      .fail(function(jqxhr, settines, ex) {
      });
    });

    var $uform = $(dash.unfollowSelector+"-form");
    $(dash.unfollowSelector+"-save-button").click(function(e) {
      e.preventDefault();

      var url = $uform.find(".form-unfollow-url").val();
      console.log(url);

      // post URL to backend to save in DB
      $.post('/unfollow', { 
          url: url
        },
        function(data, status, xhr) {
          // success
          console.log(data);
        },
        'json')
      .done(function() {
        $(dash.unfollowSelector+"-success-alert").fadeIn().delay(500)
          .fadeOut(function() {
            $(dash.unfollowSelector+"-modal").modal('hide');
          });

        // remove params from url
        window.history.replaceState(null, null, window.location.pathname);
      })
      .fail(function(jqxhr, settines, ex) {
      });
    });
  }

  this.handleUrlParamActions = function() {
    var urlstr = window.location.href;
    var url = new URL(urlstr);
    var follow = url.searchParams.get("follow");
    var unfollow = url.searchParams.get("unfollow");
    var reblog = url.searchParams.get("reblog");
    var edit = url.searchParams.get("edit");

    if (follow)
      this.doFollow(follow);
    else if (unfollow)
      this.doUnfollow(unfollow);
    else if (reblog)
      this.doReblog(reblog);
    else if (edit)
      this.doEdit(edit);
  }

  this.doFollow = function(blog) {
    var $form = $(this.followSelector+"-form");

    // we have a new blog to follow
    //console.log(blog);
    $form.find(".form-follow-url").val(blog);
    $(this.followSelector+"-modal").modal('show');
  }

  this.doUnfollow = function(blog) {
    var $form = $(this.unfollowSelector+"-form");
    $form.find(".form-unfollow-url").val(blog);
    $(this.unfollowSelector+"-modal").modal('show');
  }

  this.doReblog = function(url) {
    var dash = this;

    $.ajax(Utils.timestampUrl(url), {
      dataType: "json",
      crossDomain: true,
      success: function(data) {
        console.log(data);
        var $pform = $(dash.postSelector+"-form");
        $(dash.postSelector+"-modal .modal-title .action").html("Reblog");

        if (data.post.thumbs)
          $pform.find('.form-post-thumb').val(data.post.thumbs[0]);
        if (data.post.images)
          $pform.find('.form-post-image').val(data.post.images[0]);
        if (data.post.urls)
          $pform.find('.form-post-url').val(data.post.urls[0]);
        $pform.find('.form-post-reblog-url').val(url);
        if (data.post.text)
        {
          var text = "";
          // indent with markdown blockquote
          if (data.post.title)
            text += "> **" + data.post.title + "**\n\n";
          text += data.post.text.replace(/^/gm, "> ");
          $pform.find('.form-post-text').val(text);
        }

        $("#create-post-modal").modal('show');
      }
    });
  }

  this.doEdit = function(id) {
    var dash = this;
    var uri = "/post/" + id;
    $.ajax(Utils.timestampUrl(uri), {
      dataType: "json",
      crossDomain: true,
      success: function(data) {
        console.log(data);
        var $pform = $(dash.postSelector+"-form");
        $(dash.postSelector+"-modal .modal-title .action").html("Edit");

        if (data.post.title)
          $pform.find('.form-post-title').val(data.post.title);
        if (data.post.thumbs)
          $pform.find('.form-post-thumb').val(data.post.thumbs[0]);
        if (data.post.images)
          $pform.find('.form-post-image').val(data.post.images[0]);
        if (data.post.urls)
          $pform.find('.form-post-url').val(data.post.urls[0]);
        if (data.post.re_url)
          $pform.find('.form-post-reblog-url').val(data.post.re_url);
        if (data.post.text)
          $pform.find('.form-post-text').val(data.post.text);
        if (data.post.tags)
          $pform.find('.form-post-tags').val(data.post.tags.join(','));
        $pform.find('.form-post-update-id').val(data.post.id);

        $("#create-post-modal").modal('show');
      }
    });
  }

  this.loadSettings = function() {
    var dash = this;

    dash._imgUploader = null;
    $.getJSON("/settings?json=1", function(data) {

      dash.activateImageUploader(data.imgur_key);
      dash.activateQueuedPosting(data.queue_interval);
      dash.drawModalAvatars(data.avatar_url);
      dash.drawModalTargetName(data.name);
    });
  }

  this.activateImageUploader = function(key) {
    if (!key)
      return;

    var dash = this;
    $(dash.postSelector + "-form .form-post-image-uploader-wraper").show();

    this._imgUploader = new ImgurUploader({
      key: key,
      selector: dash.postSelector + "-form .form-img-file",
      onUploadStart: function() {
        $(dash.postSelector + "-form .form-img-file-progress")
          .css('height', '3px');
      },
      onUploadDone: function(data) {
        $(dash.postSelector + "-form .form-img-file-progress")
          .css('height', '0px');
        var imgUrl = data.link;
        $(dash.postSelector + "-form .form-post-image").val(imgUrl);
        var thumbUrl = imgUrl.replace(/(.+)\.([^/.]+)$/, "$1m.$2");
        $(dash.postSelector + "-form .form-post-thumb").val(thumbUrl);
      }
    });
  }

  this.activateQueuedPosting = function(interval) {
    if (!interval)
      return;

    $(this.postSelector+"-mode-dropdown-button").show();
    $(this.queuePageButtonSelector).show();
  }

  this.drawModalAvatars = function(url) {
    $(".modal .avatar").css('background-image', 'url(' + url + ')').show();
  }

  this.drawModalTargetName = function(name) {
    if (!name)
      name = window.location.host;

    $(".modal .modal-title .target-name").html(
      "<small> <span class='small text-muted oi oi-chevron-right' aria-hidden='true'></span> "
      + name + "</small>");
  }
};
